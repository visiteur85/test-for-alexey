import React, {useEffect, useState} from 'react';
import style from './reviewsDesktop.module.scss';
import photoRoman from '../../../../assets/pictures/Photos/rewievs/–†–æ–º–∞–Ω.png';
import photoAnastasia from '../../../../assets/pictures/Photos/rewievs/–ê–Ω–∞—Å—Ç–∞—Å–∏—è –õ–∏—Ç–≤–∏–Ω.png';
import photoDaria from '../../../../assets/pictures/Photos/rewievs/–î–∞—Ä—å—è –°—Ç–∞—Å–µ–≤–∏—á.png';
import photoSergey from '../../../../assets/pictures/Photos/rewievs/–°–µ—Ä–≥–µ–π –ë–∞—Ä–∞—É–ª—è.png';
import photoSergey1 from '../../../../assets/pictures/Photos/rewievs/–°–µ—Ä–≥–µ–π –ë–∞—Ä–∞—É–ª—è1.png';
import {ReactComponent as Lion} from "../../../../assets/pictures/svg/lion/Vector.svg";
import {CardReview} from './CardReview/CardReview'


import {Title} from "../../../../Components/Title/Title";
import avatarAlexey from '../../../../assets/pictures/Photos/rewievs/image 5.png'
import {ReactComponent as Circle} from "../../../../assets/pictures/svg/circles/–û–±–≤–æ–¥–∫–∞ —Å –ø—É–Ω–∫—Ç–∞–º–∏.svg";


const sliderData = [
    {
        id: 1,
        photo: photoAnastasia,
        name: '–ê–Ω–∞—Å—Ç–∞—Å–∏—è –õ–∏—Ç–≤–∏–Ω',
        description: '–ê–ª–µ–∫—Å–µ–π –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏ —á–µ–ª–æ–≤–µ–∫) –Ø –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –µ–º—É –∑–∞ –∑–Ω–∞–Ω–∏—è, –≤–µ—Ä—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É. '
    },
    {
        id: 2,
        photo: photoRoman,
        name: '–†–æ–º–∞–Ω –§–∏—â–µ–Ω–∫–æ',
        description: '–°–ø–∞—Å–∏–±–æ –ê–ª–µ–∫—Å–µ—é –∑–∞ –∑–Ω–∞–Ω–∏—è –ø–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!üî• –ê–ª–µ–∫—Å–µ–π –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã'
    },
    {
        id: 3,
        photo: photoSergey,
        name: '–°–µ—Ä–≥–µ–π –ë–∞—Ä–∞—É–ª—è ',
        description: '–Ø –ø—Ä–æ—Ö–æ–¥–∏–ª —É –ê–ª–µ–∫—Å–µ—è –∫—É—Ä—Å "Python/Django", –∞ –∑–∞—Ç–µ–º –∫—É—Ä—Å —É–≥–ª—É–±–ª–µ–Ω–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è Python. –ü–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –ø–æ–¥–∞—á–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞'
    },
    {
        id: 4,
        photo: photoSergey1,
        name: '–°–µ—Ä–≥–µ–π –ë–∞—Ä–∞—É–ª—è 3',
        description: '–Ø –ø—Ä–æ—Ö–æ–¥–∏–ª —É –ê–ª–µ–∫—Å–µ—è –∫—É—Ä—Å "Python/Django", –∞ –∑–∞—Ç–µ–º –∫—É—Ä—Å —É–≥–ª—É–±–ª–µ–Ω–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è Python. –ü–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –ø–æ–¥–∞—á–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞'
    },
    {
        id: 5,
        photo: photoDaria,
        name: '–î–∞—Ä—å—è –°—Ç–∞—Å–µ–≤–∏—á',
        description: '–ê–ª–µ–∫—Å–µ–π –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏ —á–µ–ª–æ–≤–µ–∫) –Ø –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –µ–º—É –∑–∞ –∑–Ω–∞–Ω–∏—è, –≤–µ—Ä—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É.'
    },
    {
        id: 6,
        photo: photoAnastasia,
        name: '–ê–Ω–∞—Å—Ç–∞—Å–∏—è –õ–∏—Ç–≤–∏–Ω',
        description: '–ê–ª–µ–∫—Å–µ–π –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏ —á–µ–ª–æ–≤–µ–∫) –Ø –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –µ–º—É –∑–∞ –∑–Ω–∞–Ω–∏—è, –≤–µ—Ä—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É. '
    },
    {
        id: 7,
        photo: photoAnastasia,
        name: '–ê–Ω–∞—Å—Ç–∞—Å–∏—è –õ–∏—Ç–≤–∏–Ω',
        description: '–ê–ª–µ–∫—Å–µ–π –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏ —á–µ–ª–æ–≤–µ–∫) –Ø –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –µ–º—É –∑–∞ –∑–Ω–∞–Ω–∏—è, –≤–µ—Ä—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É. '
    },
    {
        id: 8,
        photo: photoAnastasia,
        name: '–ê–Ω–∞—Å—Ç–∞—Å–∏—è –õ–∏—Ç–≤–∏–Ω',
        description: '–ê–ª–µ–∫—Å–µ–π –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏ —á–µ–ª–æ–≤–µ–∫) –Ø –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –µ–º—É –∑–∞ –∑–Ω–∞–Ω–∏—è, –≤–µ—Ä—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É. '
    },
    {
        id: 9,
        photo: photoAnastasia,
        name: '–ê–Ω–∞—Å—Ç–∞—Å–∏—è –õ–∏—Ç–≤–∏–Ω',
        description: '–ê–ª–µ–∫—Å–µ–π –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏ —á–µ–ª–æ–≤–µ–∫) –Ø –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –µ–º—É –∑–∞ –∑–Ω–∞–Ω–∏—è, –≤–µ—Ä—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É. '
    },
    {
        id: 10,
        photo: photoAnastasia,
        name: '–ê–Ω–∞—Å—Ç–∞—Å–∏—è –õ–∏—Ç–≤–∏–Ω',
        description: '–ê–ª–µ–∫—Å–µ–π –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏ —á–µ–ª–æ–≤–µ–∫) –Ø –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –µ–º—É –∑–∞ –∑–Ω–∞–Ω–∏—è, –≤–µ—Ä—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É. '
    },
]
export const ReviewsDesktop = () => {
    const [currentSlider, setCurrentSlider] = useState([])
    const limit = 5
    const [offset, setOffset] = useState(0)

    useEffect(() => {
        setCurrentSlider(sliderData.slice(offset, offset + limit))
    }, [offset])
    const prevPage = () => setOffset(prevState => prevState - limit)
    const nextPage = () => setOffset(prevState => prevState + limit)

    return (
        <section className={style.reviewsWrap}>
            <Lion className={style.lion}/>
            <div className={style.title}>
                <Title title="–û—Ç–∑—ã–≤—ã —É—á–µ–Ω–∏–∫–æ–≤"/>
            </div>
            <div className={style.text}>
                <p>–û—Ü–µ–Ω–∏—Ç —Å–µ–±—è, –∫–∞–∫ —É—á–∏—Ç–µ–ª—è, —è –º–æ–≥—É –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∏ —É—Å–ø–µ—Ö–∞–º —É—á–µ–Ω–∏–∫–æ–≤. –ü–æ —Ç–æ–º—É, –ø–æ–ª—É—á–∏–ª–∏ –ª–∏ –æ–Ω–∏ —Ç–æ, –∑–∞
                    —á–µ–º –ø—Ä–∏—à–ª–∏ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –∫–æ –º–Ω–µ.</p>
                <p>–ü–æ—ç—Ç–æ–º—É –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å–∞—Ç—å –º–µ–Ω—è, –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è, —Å–º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ —Å–∞–º–∏ —É—á–µ–Ω–∏–∫–∏.
                    –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∏–º–∏ –ø–æ —Å—Å—ã–ª–∫–∞–º –≤ –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–∑—ã–≤–∞, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –ª–∏—á–Ω–æ
                    –æ—Ç –Ω–∏—Ö.</p>
            </div>


            <div className={style.sliderWrap}>
                <div className={style.centralPhoto}>
                    <div className={style.avatarWrapper}>
                        <img className={style.avatar} src={avatarAlexey} alt="Alexey"/>
                        <div className={style.circle}>
                            <Circle/>
                        </div>
                    </div>
                </div>
                <div className={style.rowOnde}>

                    {currentSlider.slice(0, 2).map((person, index) => <CardReview person={person} index={index}
                                                                                  key={person.id} row={1}/>)}
                </div>
                <div className={style.rowTwo}>
                    <div className={`${style.arrow} ${style.arrowLeft}
                     ${!offset ? style.disable : ''}
                     `} onClick={prevPage}></div>
                    <div className={`${style.arrow} ${style.arrowRight} 
                    ${offset * limit > sliderData.length ? style.disable : ''}
                    `}
                         onClick={nextPage}></div>
                    {currentSlider.slice(2, 5).map((person, index) => <CardReview person={person} index={index}
                                                                                  key={person.id} row={2}/>)}
                </div>
            </div>
        </section>
    );
}






